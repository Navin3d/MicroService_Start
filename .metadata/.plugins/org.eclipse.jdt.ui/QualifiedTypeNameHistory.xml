<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.data.repository.CrudRepository"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.repository.UserRepository"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.data.UserEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ModelAttribute"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="org.modelmapper.spi.MatchingStrategy"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.models.CreateUserResponseModel"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.modelmapper.convention.MatchingStrategies"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.AuthenticationFilter"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.service.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="java.net.http.HttpRequest"/>
    <fullyQualifiedTypeName name="java.net.http.HttpResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.models.LoginRequestModel"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="javax.naming.AuthenticationException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="javax.servlet.FilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.modelmapper.ModelMapper"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.AdviceModeImportSelector"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.users.shared.UserDto"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory"/>
    <fullyQualifiedTypeName name="java.util.Base64"/>
    <fullyQualifiedTypeName name="java.nio.charset.StandardCharsets"/>
    <fullyQualifiedTypeName name="org.springframework.core.env.Environment"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="gmc.project.textnchat.api.gateway.security.AuthorizationHeaderFilter"/>
    <fullyQualifiedTypeName name="org.springframework.web.server.ServerWebExchange"/>
    <fullyQualifiedTypeName name="reactor.core.publisher.Mono"/>
    <fullyQualifiedTypeName name="com.sun.net.httpserver.HttpServer"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpResponse"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="org.springframework.http.server.reactive.ServerHttpRequest"/>
    <fullyQualifiedTypeName name="com.google.common.net.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
</qualifiedTypeNameHistroy>
